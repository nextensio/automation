apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  meshConfig:
    accessLogFile: /dev/stdout
  components:
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 10m
            memory: 40Mi

    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 10m
            memory: 40Mi
        service:
          ports:
            ## You can add custom gateway ports in user values overrides, but it must include those ports since helm replaces.
            # Note that AWS ELB will by default perform health checks on the first port
            # on this list. Setting this to the health check port will ensure that health
            # checks always work. https://github.com/istio/istio/issues/12503
            - port: 15020
              targetPort: 15020
              name: status-port
            - port: 80
              targetPort: 8080
              name: https-internal
            - port: 443
              targetPort: 8443
              name: https-agent
            - port: 31400
              targetPort: 31400
              name: tcp
              # This is the port where sni routing happens
            - port: 15443
              targetPort: 15443
              name: tls

    pilot:
      k8s:
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GODEBUG
            value: gctrace=1
          - name: PILOT_TRACE_SAMPLING
            value: "100"
          - name: CONFIG_NAMESPACE
            value: istio-config
        resources:
          requests:
            cpu: 10m
            memory: 100Mi

  values:
    global:
      proxy:
        resources:
          requests:
            cpu: 10m
            memory: 40Mi

    pilot:
      autoscaleEnabled: false

    telemetry:
      enabled: true
      v2:
        enabled: true
        prometheus:
          configOverride:
            inboundSidecar:
              metrics:
                - name: request_bytes
                  dimensions:
                    destination_port: string(destination.port)
                    request_host: request.headers['x-nextensio-sourceagent']
                    nxt_for: request.headers['x-nextensio-for']
                    nxt_srcAgent: request.headers['x-nextensio-sourceagent']
                    nxt_srcPod: request.headers['x-nextensio-sourcepod']
                    nxt_session: string(request.headers['x-nextensio-session'])
                    nxt_srcCluster: request.headers['x-nextensio-sourcecluster']
                    nxt_destCluster: request.headers['x-nextensio-destcluster']
                    nxt_uuid: 'schin'
            outboundSidecar:
              metrics:
                - name: request_bytes
                  dimensions:
                    destination_port: string(destination.port)
                    request_host: request.headers['x-nextensio-sourceagent']
                    nxt_for: request.headers['x-nextensio-for']
                    nxt_srcAgent: request.headers['x-nextensio-sourceagent']
                    nxt_srcPod: request.headers['x-nextensio-sourcepod']
                    nxt_session: string(request.headers['x-nextensio-session'])
                    nxt_srcCluster: request.headers['x-nextensio-sourcecluster']
                    nxt_destCluster: request.headers['x-nextensio-destcluster']
                    nxt_uuid: 'schin'
            gateway:
              metrics:
                - name: requests_total
                  dimensions:
                    destination_port: string(destination.port)
                    request_host: request.host
        stackdriver:
          enabled: false
          logging: false
          monitoring: false
          topology: false
          configOverride: {}

    gateways:
      istio-egressgateway:
        autoscaleEnabled: false
      istio-ingressgateway:
        autoscaleEnabled: false
